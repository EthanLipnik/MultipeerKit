{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"receive"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"using"},{"kind":"text","text":" "},{"kind":"internalParam","text":"closure"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","identifier":"doc:\/\/MultipeerKit\/documentation\/MultipeerKit\/Peer","preciseIdentifier":"s:12MultipeerKit4PeerV","text":"Peer"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Decodable","preciseIdentifier":"s:Se"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Encodable","preciseIdentifier":"s:SE"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"type","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" type to receive."}]}]},{"name":"closure","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The closure that will be called whenever a payload of the specified type is received."}]}]},{"name":"payload","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The payload decoded from the remote message."}]}]},{"name":"sender","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The remote peer who sent the message."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"MultipeerKit communicates data between peers as JSON-encoded payloads which originate with"},{"type":"text","text":" "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" entities. You register a closure to handle each specific type of entity,"},{"type":"text","text":" "},{"type":"text","text":"and this closure is automatically called by the framework when a remote peer sends"},{"type":"text","text":" "},{"type":"text","text":"a message containing an entity that decodes to the specified type."}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/multipeerkit\/multipeertransceiver\/receive(_:using:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/MultipeerKit\/documentation\/MultipeerKit\/MultipeerTransceiver\/receive(_:using:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Configures a new handler for a specific "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" type."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"receive"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"using"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Peer","preciseIdentifier":"s:12MultipeerKit4PeerV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"title":"receive(_:using:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:12MultipeerKit0A11TransceiverC7receive_5usingyxm_yx_AA4PeerVtctSeRzSERzlF","modules":[{"name":"MultipeerKit"}]},"hierarchy":{"paths":[["doc:\/\/MultipeerKit\/documentation\/MultipeerKit","doc:\/\/MultipeerKit\/documentation\/MultipeerKit\/MultipeerTransceiver"]]},"documentVersion":0,"references":{"doc://MultipeerKit/documentation/MultipeerKit/Peer":{"role":"symbol","title":"Peer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Peer"}],"abstract":[{"type":"text","text":"Represents a remote peer."}],"identifier":"doc:\/\/MultipeerKit\/documentation\/MultipeerKit\/Peer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Peer"}],"url":"\/documentation\/multipeerkit\/peer"},"doc://MultipeerKit/documentation/MultipeerKit/MultipeerTransceiver/receive(_:using:)":{"role":"symbol","title":"receive(_:using:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"receive"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"using"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Peer","preciseIdentifier":"s:12MultipeerKit4PeerV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Configures a new handler for a specific "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" type."}],"identifier":"doc:\/\/MultipeerKit\/documentation\/MultipeerKit\/MultipeerTransceiver\/receive(_:using:)","kind":"symbol","type":"topic","url":"\/documentation\/multipeerkit\/multipeertransceiver\/receive(_:using:)"},"doc://MultipeerKit/documentation/MultipeerKit/MultipeerTransceiver":{"role":"symbol","title":"MultipeerTransceiver","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultipeerTransceiver"}],"abstract":[{"type":"text","text":"Handles all aspects related to the multipeer communication."}],"identifier":"doc:\/\/MultipeerKit\/documentation\/MultipeerKit\/MultipeerTransceiver","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MultipeerTransceiver"}],"url":"\/documentation\/multipeerkit\/multipeertransceiver"},"doc://MultipeerKit/documentation/MultipeerKit":{"role":"collection","title":"MultipeerKit","abstract":[{"type":"text","text":"A high-level abstraction built on top of the MultipeerConnectivity framework, which allows iOS, macOS and tvOS devices to exchange data between them over Wi-Fi networks, peer-to-peer Wi-Fi, and Bluetooth."}],"identifier":"doc:\/\/MultipeerKit\/documentation\/MultipeerKit","kind":"symbol","type":"topic","url":"\/documentation\/multipeerkit"}}}